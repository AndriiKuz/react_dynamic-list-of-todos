{"version":3,"sources":["types/TodosFilters.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodosFilters","TodoItem","todo","selectedTodo","handleShowModal","className","classNames","id","completed","title","type","onClick","TodoList","todos","map","TodoFilter","handleFilter","useState","query","setQuery","All","option","setOption","useEffect","value","onChange","event","target","Active","Completed","placeholder","Boolean","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handlerCloseModal","loading","setLoading","user","setUser","userId","userFromServer","catch","error","console","log","finally","href","email","name","initialState","filter","App","setTodos","setSelectedTodo","setFilter","filteredTodos","toLowerCase","includes","getFilteredTodos","currentFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b59b93c4.chunk.js","sourcesContent":["export enum TodosFilters {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  selectedTodo?: Todo | null;\n  handleShowModal: (todo: Todo) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  handleShowModal,\n}) => (\n  <tr\n    data-cy=\"todo\"\n    className={classNames({\n      'has-background-info-light': selectedTodo?.id === todo.id,\n    })}\n  >\n    <td className=\"is-vcentered\">{todo.id}</td>\n    <td className=\"is-vcentered\">\n      {todo.completed && (\n        <span className=\"icon\" data-cy=\"iconCompleted\">\n          <i className=\"fas fa-check\" />\n        </span>\n      )}\n    </td>\n    <td className=\"is-vcentered is-expanded\">\n      <p className={classNames({\n        'has-text-danger': !todo.completed,\n        'has-text-success': todo.completed,\n      })}\n      >\n        {todo.title}\n      </p>\n    </td>\n    <td className=\"has-text-right is-vcentered\">\n      <button\n        data-cy=\"selectButton\"\n        className=\"button\"\n        type=\"button\"\n        onClick={() => handleShowModal(todo)}\n      >\n        <span className=\"icon\">\n          <i className={classNames(\n            'far',\n            {\n              'fa-eye-slash': selectedTodo?.id === todo.id,\n              'fa-eye': selectedTodo?.id !== todo.id,\n            },\n          )}\n          />\n        </span>\n      </button>\n    </td>\n  </tr>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  handleShowModal: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  handleShowModal,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          selectedTodo={selectedTodo}\n          handleShowModal={handleShowModal}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Filter } from '../../types/Filter';\nimport { TodosFilters } from '../../types/TodosFilters';\n\ntype Props = {\n  handleFilter: (filter: Filter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ handleFilter }) => {\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState<TodosFilters>(TodosFilters.All);\n\n  useEffect(() => {\n    handleFilter({ option, query });\n  }, [query, option]);\n\n  const handleChangeFilterOption\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setOption(event.target.value as TodosFilters);\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleDeleteQuery = () => {\n    setQuery('');\n    setOption(TodosFilters.All);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={option}\n            onChange={handleChangeFilterOption}\n          >\n            <option value={TodosFilters.All}>All</option>\n            <option value={TodosFilters.Active}>Active</option>\n            <option value={TodosFilters.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {Boolean(query)\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleDeleteQuery}\n              />\n            </span>\n          )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  handlerCloseModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handlerCloseModal,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(userFromServer => setUser(userFromServer))\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handlerCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames({\n                'has-text-danger': !selectedTodo?.completed,\n                'has-text-success': selectedTodo?.completed,\n              })}\n              >\n                {selectedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodosFilters } from './types/TodosFilters';\nimport { Filter } from './types/Filter';\n\nfunction getFilteredTodos(todos: Todo[], filter: Filter): Todo[] {\n  let filteredTodos = todos.filter(todo => {\n    switch (filter.option) {\n      case TodosFilters.Active:\n        return !todo.completed;\n      case TodosFilters.Completed:\n        return todo.completed;\n      case TodosFilters.All:\n      default:\n        return todo;\n    }\n  });\n\n  if (filter.query) {\n    filteredTodos = filteredTodos\n      .filter(({ title }) => title.toLowerCase()\n        .includes(filter.query.toLowerCase()));\n  }\n\n  return filteredTodos;\n}\n\nconst initialState = {\n  todos: [],\n  loading: false,\n  selectedTodo: null,\n  filter: {\n    option: TodosFilters.All,\n    query: '',\n  },\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialState.todos);\n  const [loading, setLoading] = useState(initialState.loading);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(initialState.selectedTodo);\n  const [filter, setFilter] = useState<Filter>(initialState.filter);\n\n  const filteredTodos = getFilteredTodos(todos, filter);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const handleFilter = (currentFilter: Filter) => {\n    setFilter(currentFilter);\n  };\n\n  const handleShowModal = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handlerCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter handleFilter={handleFilter} />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    handleShowModal={handleShowModal}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        ? (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            handlerCloseModal={handlerCloseModal}\n          />\n        )\n        : null}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}