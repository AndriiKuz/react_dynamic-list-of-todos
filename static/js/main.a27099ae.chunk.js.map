{"version":3,"sources":["types/TodosStatus.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","constants/constants.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodosStatus","TodoItem","todo","selectedTodo","setSelectedTodo","isSelected","id","className","classNames","completed","title","type","onClick","TodoList","todos","map","DEFAULT_FILTER","option","All","query","TodoFilter","updateFilter","useState","setQuery","setOption","value","onChange","e","newOption","target","Object","keys","key","placeholder","newQuery","Boolean","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handlerCloseModal","isLoading","setIsLoading","user","setUser","useEffect","userId","catch","error","console","log","finally","href","email","name","App","setTodos","filter","setFilter","filteredTodos","Active","Completed","toLowerCase","includes","getFilteredTodos","currentFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a27099ae.chunk.js","sourcesContent":["export enum TodosStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  selectedTodo?: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const isSelected = selectedTodo?.id === todo.id;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': isSelected,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !todo.completed,\n          'has-text-success': todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setSelectedTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames(\n              'far',\n              {\n                'fa-eye-slash': isSelected,\n                'fa-eye': !isSelected,\n              },\n            )}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { TodosStatus } from '../types/TodosStatus';\n\nexport const DEFAULT_FILTER = {\n  option: TodosStatus.All,\n  query: '',\n};\n","import React, { useState } from 'react';\nimport { Filter } from '../../types/Filter';\nimport { TodosStatus } from '../../types/TodosStatus';\nimport { DEFAULT_FILTER } from '../../constants/constants';\n\ntype Props = {\n  updateFilter: (filter: Filter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ updateFilter }) => {\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState<TodosStatus>(TodosStatus.All);\n\n  const handleChangeFilterOption\n  = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newOption = e.target.value as TodosStatus;\n\n    setOption(newOption);\n    updateFilter({ option: newOption, query });\n  };\n\n  const handleChangeQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newQuery = e.target.value;\n\n    setQuery(newQuery);\n    updateFilter({ option, query: newQuery });\n  };\n\n  const handleDeleteQuery = () => {\n    setQuery('');\n    setOption(TodosStatus.All);\n    updateFilter(DEFAULT_FILTER);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={option}\n            onChange={handleChangeFilterOption}\n          >\n            {Object.keys(TodosStatus).map(key => (\n              <option\n                key={key}\n                value={TodosStatus[key as keyof typeof TodosStatus]}\n              >\n                {key}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {Boolean(query)\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleDeleteQuery}\n              />\n            </span>\n          )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  handlerCloseModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handlerCloseModal,\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser)\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.log(error);\n        })\n        .finally(() => setIsLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handlerCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames({\n                'has-text-danger': !selectedTodo?.completed,\n                'has-text-success': selectedTodo?.completed,\n              })}\n              >\n                {selectedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodosStatus } from './types/TodosStatus';\nimport { Filter } from './types/Filter';\nimport { DEFAULT_FILTER } from './constants/constants';\n\nfunction getFilteredTodos(todos: Todo[], filter: Filter): Todo[] {\n  let filteredTodos = todos.filter(todo => {\n    switch (filter.option) {\n      case TodosStatus.Active:\n        return !todo.completed;\n      case TodosStatus.Completed:\n        return todo.completed;\n      default:\n        return todo;\n    }\n  });\n\n  if (filter.query) {\n    filteredTodos = filteredTodos\n      .filter(({ title }) => title.toLowerCase()\n        .includes(filter.query.toLowerCase()));\n  }\n\n  return filteredTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>(DEFAULT_FILTER);\n\n  const filteredTodos = getFilteredTodos(todos, filter);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const updateFilter = (currentFilter: Filter) => {\n    setFilter(currentFilter);\n  };\n\n  const handlerCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter updateFilter={updateFilter} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          handlerCloseModal={handlerCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}