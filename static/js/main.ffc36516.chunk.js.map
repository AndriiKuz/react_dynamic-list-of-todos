{"version":3,"sources":["types/Options.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Options","TodoList","todos","selectedTodo","handleShowModal","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","handleFilter","useState","query","setQuery","All","option","setOption","useEffect","value","onChange","event","target","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handlerCloseModal","loading","setLoading","user","setUser","userId","userFromServer","finally","href","email","name","App","setTodos","showModal","setShowModal","setSelectedTodo","filter","setFilter","filteredTodos","toLowerCase","includes","getFilteredTodos","currentFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffc36516.chunk.js","sourcesContent":["export enum Options {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  handleShowModal: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  handleShowModal,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => handleShowModal(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  {\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                    'fa-eye': selectedTodo?.id !== todo.id,\n                  },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Filter } from '../../types/Filter';\nimport { Options } from '../../types/Options';\n\ntype Props = {\n  handleFilter: (filter: Filter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ handleFilter }) => {\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState<Options>(Options.All);\n\n  useEffect(() => {\n    handleFilter({ option, query });\n  }, [query, option]);\n\n  const handleChangeFilterOption\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setOption(event.target.value as Options);\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleDeleteQuery = () => {\n    setQuery('');\n    setOption(Options.All);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={option}\n            onChange={handleChangeFilterOption}\n          >\n            <option value={Options.All}>All</option>\n            <option value={Options.Active}>Active</option>\n            <option value={Options.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleDeleteQuery}\n              />\n            </span>\n          )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  handlerCloseModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handlerCloseModal,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(userFromServer => setUser(userFromServer))\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handlerCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames({\n                'has-text-danger': !selectedTodo?.completed,\n                'has-text-success': selectedTodo?.completed,\n              })}\n              >\n                {selectedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Options } from './types/Options';\nimport { Filter } from './types/Filter';\n\nfunction getFilteredTodos(todos: Todo[], filter: Filter): Todo[] {\n  let filteredTodos = [...todos];\n\n  filteredTodos = filteredTodos.filter(todo => {\n    switch (filter.option) {\n      case Options.Active:\n        return !todo.completed;\n      case Options.Completed:\n        return todo.completed;\n      case Options.All:\n      default:\n        return todo;\n    }\n  });\n\n  if (filter.query) {\n    filteredTodos = filteredTodos\n      .filter(({ title }) => title.toLowerCase()\n        .includes(filter.query.toLowerCase()));\n  }\n\n  return filteredTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>({ option: Options.All, query: '' });\n\n  const filteredTodos = getFilteredTodos(todos, filter);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const handleFilter = (currentFilter: Filter) => {\n    setFilter(currentFilter);\n  };\n\n  const handleShowModal = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setShowModal(true);\n  };\n\n  const handlerCloseModal = () => {\n    setSelectedTodo(null);\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter handleFilter={handleFilter} />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    handleShowModal={handleShowModal}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal\n        && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            handlerCloseModal={handlerCloseModal}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}